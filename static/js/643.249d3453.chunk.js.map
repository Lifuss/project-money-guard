{"version":3,"file":"static/js/643.249d3453.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledSection = styled.section`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  background-color: #1e0646;\n`;\n\nexport const StyledLogo = styled.img`\n  width: 36px;\n`;\n\nexport const StyledForm = styled.form`\n  position: relative;\n  display: flex;\n  width: 533px;\n  height: 570px;\n  flex-direction: column;\n  align-items: center;\n  borderRadius: 8px;\n\n  background-color: rgba(255, 255, 255, 0.10);\n  backdrop-filter: blur(50px);\n  box-shadow: 0px 4px 60px rgba(0, 0, 0, 0.25);\n`;\n\nexport const StyledLink = styled(NavLink)`\n  width: 300px;\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 20px;\n  border:  1px solid #4A56E2;\n  margin-top: 20px;\n  margin-bottom: 80px;\n\n  font-weight: 400;\n  font-size: 18px;\n  text-transform: uppercase;\n  letter-spacing: 1.80;\n  word-wrap: break-word;\n  text-align: center;\n  cursor: pointer;\n  background-color: #ffffff;\n  color: #623F8B;\n\n  &:hover {\n    font-weight: 600;\n  }\n`;\n\nexport const StyledTitle = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 97px;\n\n  .logoText {\n    font-size: 19px;\n    color: white;\n  \n    @media screen and (min-width: 768px) {\n      font-size: 27px;\n    }\n  }\n  @media screen and (min-width: 768px) {\n    padding-top: 80px;\n  }\n`;","import React from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { Navigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginThunk } from '../../redux/auth/operations';\nimport StyledLoginButton from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport EmailOutlinedIcon from '@mui/icons-material/EmailOutlined';\nimport LockIcon from '@mui/icons-material/Lock';\nimport { selectIsLoggedIn } from 'redux/auth/selectors';\nimport { StyledSection, StyledForm, StyledLink } from './LoginForm.styled';\n\nconst validationSchema = yup.object({\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(6, 'Password should be at least 6 characters length')\n    .required('Password is required'),\n});\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const isLogin = useSelector(selectIsLoggedIn);\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      handleSubmit(values);\n    },\n  });\n\n  if (isLogin) {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  const handleSubmit = values => {\n    dispatch(loginThunk(values));\n  };\n\n  return (\n    <StyledSection>\n      <StyledForm onSubmit={formik.handleSubmit}>\n        <TextField\n          fullWidth\n          id=\"email\"\n          name=\"email\"\n          label={\n            <>\n              <EmailOutlinedIcon /> Email\n            </>\n          }\n          type=\"email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n          style={{\n            width: '409px',\n            marginTop: '52px',\n            borderBottom: '1px solid rgba(255, 255, 255, 0.4)',\n          }}\n        />\n        <TextField\n          fullWidth\n          id=\"password\"\n          name=\"password\"\n          label={\n            <>\n              <LockIcon /> Password\n            </>\n          }\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n          style={{\n            width: '409px',\n            marginTop: '40px',\n            borderBottom: '1px solid rgba(255, 255, 255, 0.4)',\n          }}\n        />\n        <StyledLoginButton\n          type=\"submit\"\n          style={{\n            width: '300px',\n            height: '50px',\n            background:\n              'linear-gradient(97deg, #FFC727 0%, #9E40BA 61%, #7000FF 91%)',\n            boxShadow: '1px 9px 15px rgba(0, 0, 0, 0.20)',\n            borderRadius: '20px',\n            color: '#ffffff',\n            fontWeight: 400,\n            fontSize: '18px',\n            textTransform: 'uppercase',\n            letterSpacing: '1.80',\n            textAlign: 'center',\n            cursor: 'pointer',\n            marginTop: '52px',\n            transition: 'background 0.3s, font-weight 0.3s',\n          }}\n        >\n          Log In\n        </StyledLoginButton>\n\n        <StyledLink to=\"/registration\">Register</StyledLink>\n      </StyledForm>\n    </StyledSection>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm/LoginForm';\nimport React from 'react';\n\nconst LoginPage = () => {\n  return (\n    <div>\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["StyledSection","styled","section","_templateObject","_taggedTemplateLiteral","StyledForm","img","_templateObject2","form","_templateObject3","StyledLink","NavLink","_templateObject4","div","_templateObject5","validationSchema","yup","email","required","password","min","dispatch","useDispatch","isLogin","useSelector","selectIsLoggedIn","formik","useFormik","initialValues","onSubmit","values","handleSubmit","_jsx","Navigate","to","replace","loginThunk","children","_jsxs","TextField","fullWidth","id","name","label","_Fragment","EmailOutlinedIcon","type","value","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","helperText","style","width","marginTop","borderBottom","LockIcon","StyledLoginButton","height","background","boxShadow","borderRadius","color","fontWeight","fontSize","textTransform","letterSpacing","textAlign","cursor","transition","LoginForm"],"sourceRoot":""}
{"version":3,"file":"static/js/731.eb7bb4a1.chunk.js","mappings":"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","sources":["components/Chart/Chart.styled.js","components/Chart/Chart.jsx","components/StatisticsDashboard/StatisticsDashboard.styled.js","components/StatisticsDashboard/StatisticsDashboard.jsx","components/StatisticsTable/StatisticsTable.styled.js","components/StatisticsTable/StatisticsTable.jsx","pages/StatisticsTab/StatisticsTab.styled.js","pages/StatisticsTab/StatisticsTab.jsx","redux/transactions/selectors.js"],"sourcesContent":["import styled from 'styled-components';\nexport const ChartP = styled.p`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  color: var(--white, #fbfbfb);\n  text-align: center;\n  font-size: 18px;\n  font-weight: 600;\n`;\nexport const ChartDiv = styled.div`\n  position: relative;\n  width: 280px;\n  height: 280px;\n  margin-top: 8px;\n  padding: 0 auto;\n  @media only screen and (min-width: 768px) {\n    width: 336px;\n    height: 336px;\n    margin-top: 20px;\n  }\n  @media only screen and (min-width: 1280px) {\n    width: 288px;\n    height: 288px;\n  }\n`;\n","import React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport pngwing from '../StatisticsTable/pngwing.com (8).webp';\nimport { ChartP, ChartDiv } from './Chart.styled';\nimport { selectPeriodTotal } from 'redux/transactions/selectors';\nimport { useSelector } from 'react-redux';\nChartJS.register(ArcElement, Tooltip, Legend);\nconst Chart = ({ dataDoughnut, categories }) => {\n  const periodTotal = useSelector(selectPeriodTotal);\n  return (\n    <ChartDiv>\n      {categories.length > 1 ? (\n        <div>\n          <Doughnut data={dataDoughnut} />\n          <ChartP>â‚´{periodTotal}</ChartP>\n        </div>\n      ) : (\n        <img src={pngwing} alt=\"fff\" />\n      )}\n    </ChartDiv>\n  );\n};\n\nexport default Chart;\n","import styled from 'styled-components';\n\nexport const SelectMainDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 16px;\n  min-width: 316px;\n  max-width: 316px;\n\n  @media only screen and (min-width: 768px) {\n    flex-direction: row;\n    gap: 16px;\n    padding: 0;\n    min-width: 192px;\n    max-width: 192x;\n  }\n  @media only screen and (min-width: 1280px) {\n    margin-top: 60px;\n    min-width: 213px;\n    max-width: 213px;\n    gap: 32px;\n  }\n`;\nexport const styles = {\n  control: (baseStyles, state) => ({\n    ...baseStyles,\n    minWidth: 280,\n    maxWidth: 280,\n    minHeight: 50,\n    borderRadius: '8px',\n    background: ' rgba(133, 93, 175, 0.13) ',\n    '@media only screen and (min-width:768px)': {\n      ...styles['@media only screen and (min-width: 768px)'],\n      minWidth: 160,\n      maxWidth: 160,\n    },\n    '@media only screen and (min-width:1280px)': {\n      ...styles['@media only screen and (min-width: 1280px)'],\n      minWidth: 181,\n      maxWidth: 181,\n    },\n  }),\n  option: (styles, state) => ({\n    ...styles,\n    backgroundColor: state.isSelected ? 'rgba(255, 255, 255, 0.10)' : '',\n    color: state.isSelected ? '#FF868D' : '',\n    ':hover': {\n      background: 'rgba(255, 255, 255, 0.10)',\n      color: '#FF868D',\n    },\n  }),\n  menu: baseStyles => ({\n    ...baseStyles,\n    background:\n      'linear-gradient(0deg, rgba(87, 38, 146, 0.813) 0%, rgba(80, 48, 154, 0.9) 43.14%, rgba(99, 63, 159, 0.9) 73.27%, rgba(76, 46, 109, 0.8) 120.03%) ',\n    border: 'none ',\n    borderRadius: '8px ',\n  }),\n  menuList: base => ({\n    ...base,\n\n    '::-webkit-scrollbar': {\n      width: '4px',\n      height: '0px',\n    },\n    '::-webkit-scrollbar-track': {\n      background: '#9065d1',\n    },\n    '::-webkit-scrollbar-thumb': {\n      background: '#6b438c',\n    },\n    '::-webkit-scrollbar-thumb:hover': {\n      background: '#330a65',\n    },\n  }),\n};\n","import React, { useEffect, useState } from 'react';\nimport Select from 'react-select';\nimport { SelectMainDiv, styles } from './StatisticsDashboard.styled';\n\nimport { useDispatch } from 'react-redux';\nimport { fetchTransactionsSummary } from 'redux/transactions/operations';\n\nconst StatisticsDashboard = () => {\n  const dispatch = useDispatch();\n  const [selectedMonth, setSelectedMonth] = useState({\n    value: 1,\n    label: 'January',\n  });\n  const [selectedYear, setSelectedYear] = useState({\n    value: 2023,\n    label: '2023',\n  });\n\n  const onMonthChange = month => {\n    setSelectedMonth(month);\n  };\n  const onYearClick = year => {\n    setSelectedYear(year);\n  };\n\n  const optionsYears = [\n    { value: 2023, label: '2023' },\n    { value: 2022, label: '2022' },\n    { value: 2021, label: '2021' },\n    { value: 2019, label: '2019' },\n    { value: 2018, label: '2018' },\n    { value: 2017, label: '2017' },\n  ];\n  const optionsMonth = [\n    { value: 1, label: 'January' },\n    { value: 2, label: 'February' },\n    { value: 3, label: 'March' },\n    { value: 4, label: 'April' },\n    { value: 5, label: 'May' },\n    { value: 6, label: 'June' },\n    { value: 7, label: 'July' },\n    { value: 8, label: 'August' },\n    { value: 9, label: 'September' },\n    { value: 10, label: 'October' },\n    { value: 11, label: 'November' },\n    { value: 12, label: 'December' },\n  ];\n\n  useEffect(() => {\n    const data = {\n      month: selectedMonth.value,\n      year: selectedYear.value,\n    };\n    dispatch(fetchTransactionsSummary(data));\n  }, [dispatch, selectedMonth, selectedYear]);\n  return (\n    <SelectMainDiv>\n      <Select\n        styles={styles}\n        value={selectedMonth}\n        onChange={value => onMonthChange(value)}\n        options={optionsMonth}\n        placeholder={selectedMonth.label}\n        theme={theme => ({\n          ...theme,\n          colors: {\n            neutral50: '#fff',\n          },\n        })}\n      />\n\n      <div>\n        <Select\n          styles={styles}\n          value={selectedYear}\n          onChange={value => onYearClick(value)}\n          options={optionsYears}\n          placeholder={selectedYear.label}\n          theme={theme => ({\n            ...theme,\n            colors: {\n              neutral50: '#fff',\n            },\n          })}\n        />\n      </div>\n    </SelectMainDiv>\n  );\n};\n\nexport default StatisticsDashboard;\n","import styled from 'styled-components';\nexport const TableDiv = styled.div`\n  width: 280px;\n  padding: 0 16px;\n\n  @media only screen and (min-width: 768px) {\n    width: 336px;\n    padding: 0;\n  }\n  @media only screen and (min-width: 1280px) {\n    width: 395px;\n  }\n`;\nexport const TableTd = styled.td`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  font-size: 14px;\n  /* padding: 17px 20px; */\n  /* width: 395px; */\n`;\nexport const TableTr = styled.tr`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.41);\n  padding: 16px;\n`;\nexport const TableTrHead = styled.tr`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.41);\n  padding: 16px;\n  margin-top: 20px;\n\n  font-family: Poppins;\n  font-size: 16px;\n  font-weight: 600;\n  width: 280px;\n  max-height: 56px;\n  border-radius: 8px;\n  background: rgba(82, 59, 126, 0.6);\n\n  box-shadow: 0px 4px 60px 0px rgba(0, 0, 0, 0.25);\n\n  @media only screen and (min-width: 768px) {\n    width: 336px;\n  }\n  @media only screen and (min-width: 1280px) {\n    width: 395px;\n  }\n`;\nexport const TableTh = styled.th`\n  /* padding: 16px; */\n  display: inline-block;\n`;\nexport const TableH3 = styled.h3`\n  margin: 30px auto 10px auto;\n  font-size: 20px;\n  text-align: center;\n  font-weight: 400;\n  max-width: 300px;\n  line-height: 1.5;\n  padding: 30px 0;\n  border-top: 1px solid white;\n  border-bottom: 2px solid white;\n  @media only screen and (min-width: 768px) {\n    margin: 200px 50px 50px 50px;\n  }\n`;\nexport const TableBody = styled.tbody`\n  /* padding: 16px; */\n  display: flex;\n  flex-direction: column;\n\n  max-width: 280px;\n  overflow-y: scroll;\n  @media only screen and (min-width: 768px) {\n    max-width: 336px;\n    height: 490px;\n  }\n  @media only screen and (min-width: 1280px) {\n    max-width: 395px;\n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: rgba(82, 59, 126, 0.3);\n  }\n  &::-webkit-scrollbar-track {\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n  }\n  &::-webkit-scrollbar {\n    width: 0.5em;\n  }\n`;\n","import React from 'react';\nimport {\n  TableTr,\n  TableTd,\n  TableTh,\n  TableTrHead,\n  TableBody,\n  TableH3,\n  TableDiv,\n} from './StatisticsTable.styled';\nimport { useSelector } from 'react-redux';\n\nimport {\n  selectExpenseSummary,\n  selectIncomeSummary,\n} from 'redux/transactions/selectors';\nconst StatisticsTable = ({ categories, dataDoughnut }) => {\n  const income = useSelector(selectIncomeSummary);\n  const expense = useSelector(selectExpenseSummary);\n  return (\n    <TableDiv>\n      {categories.length > 1 ? (\n        <table>\n          <thead>\n            <TableTrHead>\n              <TableTh>Category</TableTh>\n              <TableTh>Sum</TableTh>\n            </TableTrHead>\n          </thead>\n\n          <TableBody>\n            {categories.map(({ name, total, type }, index) => {\n              if (type !== 'INCOME') {\n                return (\n                  <TableTr key={name}>\n                    <TableTd>\n                      <div\n                        style={{\n                          backgroundColor: `${dataDoughnut.datasets[0].backgroundColor[index]}`,\n                          width: '24px',\n                          height: '24px',\n                        }}\n                      ></div>\n                      {name}\n                    </TableTd>\n                    <td\n                      style={{\n                        fontSize: '14px',\n                      }}\n                    >\n                      {total < 0 ? -total : total}\n                    </td>\n                  </TableTr>\n                );\n              }\n              return '';\n            })}\n          </TableBody>\n          <tfoot>\n            <TableTr\n              style={{\n                border: 'none',\n              }}\n            >\n              <td>Expenses:</td>\n              <td\n                style={{\n                  color: '#FF868D',\n                }}\n              >\n                {-expense}\n              </td>\n            </TableTr>\n            <TableTr\n              style={{\n                border: 'none',\n              }}\n            >\n              <td>Income:</td>\n              <td\n                style={{\n                  color: '#FF868D',\n                }}\n              >\n                {income}\n              </td>\n            </TableTr>\n          </tfoot>\n        </table>\n      ) : (\n        <TableH3>\n          It looks like you have not made any monetary transactions during this\n          time period\n        </TableH3>\n      )}\n    </TableDiv>\n  );\n};\n\nexport default StatisticsTable;\n","import styled from 'styled-components';\n\nexport const StatisticDivMain = styled.div`\n  color: white;\n  display: block;\n  position: relative;\n  overflow: hidden;\n  min-width: 325px;\n  max-width: 375px;\n  margin: 0 auto;\n  padding: 0 20px;\n\n  &::after {\n    content: '';\n    width: 893px;\n    height: 901px;\n    border-radius: 901px;\n    background: linear-gradient(\n      220deg,\n      rgba(109, 84, 235, 0.6) 28.31%,\n      rgba(101, 35, 146, 0.6) 66.76%\n    );\n    filter: blur(200px);\n    position: absolute;\n    left: 300px;\n    top: 200px;\n  }\n  &::before {\n    content: '';\n    width: 893px;\n    height: 901px;\n    border-radius: 366.105px;\n    background: #302e8e;\n\n    filter: blur(150px);\n    position: absolute;\n    left: 650px;\n    bottom: 500px;\n  }\n  @media only screen and (min-width: 768px) {\n    display: flex;\n    margin: 0;\n    justify-content: space-between;\n    gap: 32px;\n    max-width: 768px;\n    height: 720px;\n    padding: 20px 16px 0 35px;\n  }\n  @media only screen and (min-width: 1280px) {\n    max-width: 803px;\n    height: 827px;\n    padding: 32px 16px 40px 69px;\n    padding: 20px 16px 0 35px;\n  }\n`;\nexport const StatisticDivChart = styled.div`\n  position: relative;\n  width: 280px;\n  padding: 16px;\n\n  @media only screen and (min-width: 768px) {\n    width: 336px;\n    padding: 0;\n    &::after {\n      content: '';\n      width: 330px;\n      height: 333px;\n      border-radius: 333px;\n      background: #6d1c77;\n      position: absolute;\n      left: 200px;\n      bottom: 0;\n\n      filter: blur(150px);\n    }\n  }\n  @media only screen and (min-width: 1280px) {\n    width: 288px;\n  }\n`;\nexport const StatisticTitle = styled.h2`\n  color: ${({ theme }) => theme.colors.mainWhite};\n  text-align: left;\n  font-size: 30px;\n  font-weight: 400;\n  max-width: 280px;\n`;\n","import Chart from 'components/Chart/Chart';\nimport StatisticsDashboard from 'components/StatisticsDashboard/StatisticsDashboard';\nimport StatisticsTable from 'components/StatisticsTable/StatisticsTable';\n\nimport { selectCategoriesSummary } from '../../redux/transactions/selectors';\n\nimport { useSelector } from 'react-redux';\nimport React from 'react';\n\nimport {\n  StatisticDivChart,\n  StatisticDivMain,\n  StatisticTitle,\n} from './StatisticsTab.styled';\n\nconst StatisticsTab = () => {\n  const categories = useSelector(selectCategoriesSummary);\n  const categoriesValue = categories.map(({ total, type }) => {\n    if (type !== 'INCOME') {\n      if (total < 0) {\n        return -total;\n      }\n      return total;\n    }\n    return '';\n  });\n  const dataDoughnut = {\n    labels: [],\n    datasets: [\n      {\n        data: [...categoriesValue],\n        backgroundColor: [\n          'rgba(247, 79, 115, 0.991)',\n          'rgba(110, 120, 232, 1)',\n          'rgba(254, 208, 87, 1)',\n          'rgba(197, 186, 255, 1)',\n          'rgb(153, 102, 255)',\n          'rgb(255, 160, 64)',\n          'rgba(36, 204, 167, 1)',\n          'rgba(0, 173, 132, 1)',\n          'rgba(255, 216, 208, 1)',\n          'rgba(129, 225, 255, 1)',\n          'rgba(253, 148, 152, 1)',\n        ],\n        borderColor: [\n          'rgba(255, 2, 57, 0.991)',\n          'rgb(54, 163, 235)',\n          'rgb(255, 207, 86)',\n          'rgb(75, 192, 192)',\n          'rgb(153, 102, 255)',\n          'rgb(255, 160, 64)',\n          'rgb(0, 161, 70)',\n          'rgb(0, 76, 164)',\n          'rgb(206, 0, 155)',\n          'rgb(77, 255, 190)',\n          'rgb(255, 137, 137)',\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  return (\n    <StatisticDivMain>\n      <StatisticDivChart\n        style={{\n          zIndex: '2',\n        }}\n      >\n        <StatisticTitle>Statistics</StatisticTitle>\n        <Chart dataDoughnut={dataDoughnut} categories={categories} />\n      </StatisticDivChart>\n      <div\n        style={{\n          zIndex: '3',\n        }}\n      >\n        <StatisticsDashboard />\n        <StatisticsTable categories={categories} dataDoughnut={dataDoughnut} />\n      </div>\n    </StatisticDivMain>\n  );\n};\n\nexport default StatisticsTab;\n","// transactions\n\nexport const selectTransactions = state =>\n  state.transactions.transactions.items;\nexport const selectLoading = state => state.transactions.transactions.isLoading;\nexport const selectError = state => state.transactions.transactions.error;\nexport const selectCategories = state =>\n  state.transactions.transactions.categories;\n\n// summary\n\nexport const selectCategoriesSummary = state =>\n  state.transactions.summary.categoriesSummary;\nexport const selectIncomeSummary = state =>\n  state.transactions.summary.incomeSummary;\nexport const selectExpenseSummary = state =>\n  state.transactions.summary.expenseSummary;\nexport const selectPeriodTotal = state =>\n  state.transactions.summary.periodTotal;\nexport const selectYear = state => state.transactions.summary.year;\nexport const selectMonth = state => state.transactions.summary.month;\n"],"names":["ChartP","styled","p","_templateObject","_taggedTemplateLiteral","ChartDiv","div","_templateObject2","ChartJS","register","ArcElement","Tooltip","Legend","_ref","dataDoughnut","categories","periodTotal","useSelector","selectPeriodTotal","_jsx","children","length","_jsxs","Doughnut","data","src","pngwing","alt","SelectMainDiv","styles","control","baseStyles","state","_objectSpread","minWidth","maxWidth","minHeight","borderRadius","background","option","backgroundColor","isSelected","color","menu","border","menuList","base","width","height","dispatch","useDispatch","_useState","useState","value","label","_useState2","_slicedToArray","selectedMonth","setSelectedMonth","_useState3","_useState4","selectedYear","setSelectedYear","useEffect","month","year","fetchTransactionsSummary","Select","onChange","options","placeholder","theme","colors","neutral50","TableDiv","TableTd","td","TableTr","tr","_templateObject3","TableTrHead","_templateObject4","TableTh","th","_templateObject5","TableH3","h3","_templateObject6","TableBody","tbody","_templateObject7","income","selectIncomeSummary","expense","selectExpenseSummary","map","_ref2","index","name","total","type","style","concat","datasets","fontSize","StatisticDivMain","StatisticDivChart","StatisticTitle","h2","mainWhite","selectCategoriesSummary","categoriesValue","labels","_toConsumableArray","borderColor","borderWidth","zIndex","Chart","StatisticsDashboard","StatisticsTable","selectTransactions","transactions","items","selectLoading","isLoading","selectError","error","selectCategories","summary","categoriesSummary","incomeSummary","expenseSummary"],"sourceRoot":""}
{"version":3,"file":"static/js/914.ea63e783.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.js","components/RegistrationForm/RegistrationForm.jsx","pages/RegistrationPage/RegistrationPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledSection = styled.section`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  background-color: #1e0646;\n`;\n\nexport const StyledLogo = styled.img`\n  width: 36px;\n`;\n\nexport const StyledForm = styled.form`\n  position: relative;\n  display: flex;\n  width: 533px;\n  height: 570px;\n  flex-direction: column;\n  align-items: center;\n  borderRadius: 8px;\n\n  background-color: rgba(255, 255, 255, 0.10);\n  backdrop-filter: blur(50px);\n  box-shadow: 0px 4px 60px rgba(0, 0, 0, 0.25);\n`;\n\nexport const StyledLink = styled(NavLink)`\n  width: 300px;\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 20px;\n  border:  1px solid #4A56E2;\n  margin-top: 20px;\n  margin-bottom: 80px;\n\n  font-weight: 400;\n  font-size: 18px;\n  text-transform: uppercase;\n  letter-spacing: 1.80;\n  word-wrap: break-word;\n  text-align: center;\n  cursor: pointer;\n  background-color: #ffffff;\n  color: #623F8B;\n\n  &:hover {\n    font-weight: 600;\n  }\n`;\n\nexport const StyledTitle = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 97px;\n\n  .logoText {\n    font-size: 19px;\n    color: white;\n  \n    @media screen and (min-width: 768px) {\n      font-size: 27px;\n    }\n  }\n  @media screen and (min-width: 768px) {\n    padding-top: 80px;\n  }\n`;","import React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { Navigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { registerThunk } from '../../redux/auth/operations';\nimport { authReducer } from '../../redux/auth/slice';\nimport { selectIsLoggedIn } from '../../redux/auth/selectors';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport EmailOutlinedIcon from '@mui/icons-material/EmailOutlined';\nimport LockIcon from '@mui/icons-material/Lock';\nimport PasswordStrengthBar from 'react-password-strength-bar-with-style-item';\nimport {\n  StyledSection,\n  StyledForm,\n  StyledLink,\n} from '../LoginForm/LoginForm.styled';\n\nconst validationSchema = yup.object({\n  name: yup.string('Enter your name').required('Name is required'),\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(6, 'Password should be at least 6 characters length')\n    .required('Password is required'),\n  confirmPassword: yup\n    .string('Confirm your password')\n    .oneOf([yup.ref('password'), null], 'Passwords must match')\n    .required('Confirm Password is required'),\n});\n\nconst RegistrationForm = () => {\n  const dispatch = useDispatch();\n  const isLogin = useSelector(selectIsLoggedIn);\n  const [password, setPassword] = useState('');\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      handleSubmit(values);\n    },\n  });\n\n  if (isLogin) {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  const handleSubmit = async values => {\n    try {\n      const response = await dispatch(registerThunk(values));\n\n      if (response.status === 201) {\n        dispatch(authReducer.actions.login(response.data));\n        return <Navigate to=\"/\" />;\n      } else if (response.status === 400) {\n        console.error('Validation error:', response.data);\n      } else if (response.status === 409) {\n        console.error(\n          'Error: User with such email already exists:',\n          response.data\n        );\n      } else {\n        console.error(\n          'Unknown error during registration. Status:',\n          response.status\n        );\n      }\n    } catch (error) {\n      console.error('Registration was unsuccessful:', error);\n    }\n  };\n\n  return (\n    <StyledSection>\n      <StyledForm onSubmit={formik.handleSubmit}>\n        <TextField\n          fullWidth\n          id=\"name\"\n          name=\"name\"\n          label=\"Name\"\n          type=\"text\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n        />\n        <TextField\n          fullWidth\n          id=\"email\"\n          name=\"email\"\n          label={\n            <>\n              <EmailOutlinedIcon /> Email\n            </>\n          }\n          type=\"email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          fullWidth\n          id=\"password\"\n          name=\"password\"\n          label={\n            <>\n              <LockIcon /> Password\n            </>\n          }\n          type=\"password\"\n          value={formik.values.password}\n          onChange={e => {\n            formik.handleChange(e);\n            setPassword(e.target.value);\n          }}\n          onBlur={formik.handleBlur}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <TextField\n          fullWidth\n          id=\"confirmPassword\"\n          name=\"confirmPassword\"\n          label={\n            <>\n              <LockIcon /> Confirm password\n            </>\n          }\n          type=\"password\"\n          value={formik.values.confirmPassword}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={\n            formik.touched.confirmPassword &&\n            Boolean(formik.errors.confirmPassword)\n          }\n          helperText={\n            formik.touched.confirmPassword && formik.errors.confirmPassword\n          }\n        />\n        <PasswordStrengthBar password={password} />\n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n          Register\n        </Button>\n      </StyledForm>\n      <StyledLink to=\"/login\">Log in</StyledLink>\n    </StyledSection>\n  );\n};\n\nexport default RegistrationForm;\n","import RegistrationForm from 'components/RegistrationForm/RegistrationForm';\nimport React from 'react';\n\nconst RegistrationPage = () => {\n  return (\n    <div>\n      <RegistrationForm />\n    </div>\n  );\n};\n\nexport default RegistrationPage;\n"],"names":["StyledSection","styled","section","_templateObject","_taggedTemplateLiteral","StyledForm","img","_templateObject2","form","_templateObject3","StyledLink","NavLink","_templateObject4","div","_templateObject5","validationSchema","yup","name","required","email","password","min","confirmPassword","oneOf","dispatch","useDispatch","isLogin","useSelector","selectIsLoggedIn","_useState","useState","_useState2","_slicedToArray","setPassword","formik","useFormik","initialValues","onSubmit","values","handleSubmit","_jsx","Navigate","to","replace","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","registerThunk","sent","status","authReducer","actions","login","data","abrupt","console","error","t0","stop","_x","apply","arguments","_jsxs","children","TextField","fullWidth","id","label","type","value","onChange","handleChange","onBlur","handleBlur","touched","Boolean","errors","helperText","_Fragment","EmailOutlinedIcon","LockIcon","e","target","PasswordStrengthBar","Button","color","variant","RegistrationForm"],"sourceRoot":""}
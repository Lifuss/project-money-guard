{"version":3,"file":"static/js/772.f37df779.chunk.js","mappings":"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","sources":["components/AddTransactionForm/AddTransactionForm.jsx","components/ButtonAddTransactions/ButtonAddTransactions.jsx","components/EditTransactionForm/EditTransactionForm.jsx","components/ModalAddTransaction/ModalAddTransaction.jsx","components/ModalEditTransaction/ModalEditTransaction.jsx","components/TransactionsList/TransactionsList.styled.js","components/TransactionsItem/TransactionsItem.styled.js","components/TransactionsItem/TransactionsItem.jsx","components/TransactionsList/MobileList.jsx","components/TransactionsList/TransactionsList.jsx","pages/HomeTab/HomeTab.jsx","redux/transactions/selectors.js"],"sourcesContent":["import React from 'react';\n\nconst AddTransactionForm = () => {\n  return <div>AddTransactionForm</div>;\n};\n\nexport default AddTransactionForm;\n","import React from 'react';\n\nconst ButtonAddTransactions = () => {\n  return <div>ButtonAddTransactions</div>;\n};\n\nexport default ButtonAddTransactions;\n","import React from 'react';\n\nconst EditTransactionForm = () => {\n  return <div>EditTransactionForm</div>;\n};\n\nexport default EditTransactionForm;\n","import React from 'react';\n\nconst ModalAddTransaction = () => {\n  return <div>ModalAddTransaction</div>;\n};\n\nexport default ModalAddTransaction;\n","import React from 'react';\n\nconst ModalEditTransaction = () => {\n  return <div>ModalEditTransaction</div>;\n};\n\nexport default ModalEditTransaction;\n","import styled from 'styled-components';\n\n// ==============Mobile==================\n\nexport const StyledTransactionsList = styled.div`\n  margin: 0 auto;\n`;\n\nexport const StyledMobileWrapper = styled.ul`\n  max-height: 50vh;\n  overflow-y: scroll;\n  &::-webkit-scrollbar-thumb {\n    background-color: rgba(82, 59, 126, 0.3);\n  }\n  &::-webkit-scrollbar-track {\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n  }\n  &::-webkit-scrollbar {\n    width: 0.5em;\n  }\n  @media only screen and (min-width: 320px) and (max-width: 767px) {\n    display: block;\n    list-style: none;\n  }\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\n// ==============Table==================\nexport const StyledTableWrapper = styled.div`\n  display: none;\n  margin: 0 auto;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: column;\n  }\n`;\nexport const StyledTable = styled.table`\n  border-collapse: collapse;\n  width: 100%;\n`;\nexport const StyledHeaderTr = styled.tr`\n  display: flex;\n  align-items: center;\n\n  padding: 16px 20px;\n  border-radius: 8px;\n  background: ${({ theme }) => theme.backgrounds.tableHead};\n  box-shadow: ${({ theme }) => theme.shadows.default};\n  backdrop-filter: ${({ theme }) => theme.blur.backdropFilter};\n\n  & :nth-child(3) {\n    margin-left: -15px;\n  }\n  & :nth-child(4) {\n    margin-left: -30px;\n  }\n  & :nth-child(5) {\n    margin-left: 18px;\n  }\n  & :nth-child(:not(:last-child)) {\n    margin-right: 0;\n  }\n  @media only screen and (min-width: 768px) {\n    gap: 60px;\n  }\n`;\n\nexport const StyledTh = styled.th`\n  text-align: center;\n  font-size: 16px;\n  font-weight: 400;\n\n  color: ${({ theme }) => theme.colors.mainWhite};\n`;\nexport const StyledTbodyTable = styled.tbody`\n  display: block;\n\n  max-height: 50vh;\n  overflow-y: scroll;\n  &::-webkit-scrollbar-thumb {\n    background-color: rgba(82, 59, 126, 0.3);\n  }\n  &::-webkit-scrollbar-track {\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n  }\n  &::-webkit-scrollbar {\n    width: 0.5em;\n  }\n`;\n\nexport const StyledTr = styled.tr`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px 20px;\n  border-bottom: ${({ theme }) => theme.border.borderBottom};\n\n  gap: 50px;\n`;\nexport const StyledTd = styled.td`\n  min-width: 50px;\n  text-align: center;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  color: ${props => props.$color};\n`;\nexport const StyledTdComment = styled(StyledTd)`\n  text-align: start;\n  flex-shrink: 1;\n  flex-basis: 100px;\n`;\nexport const StyledTableBtnWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n","import styled from 'styled-components';\n\nexport const StyledTransaction = styled.li`\n  margin: 0 auto;\n  min-width: 280px;\n  max-width: 360px;\n  margin-bottom: 8px;\n  border-radius: 10px;\n  background: rgba(255, 255, 255, 0.1);\n  border-left: 5px solid ${props => props.$color};\n  @media only screen and (min-width: 320px) and (max-width: 767px) {\n    display: block;\n    list-style: none;\n  }\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const StyledParWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px 20px;\n  border-bottom: ${({ theme }) => theme.border.borderBottom};\n`;\nexport const StyledParagraph = styled.p`\n  text-align: right;\n  font-family: Poppins;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  color: ${({ theme }) => theme.colors.mainWhite};\n`;\n\nexport const StyledSpan = styled.span`\n  max-width: 120px;\n`;\nexport const StyledBtnBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 12px 20px;\n`;\n\nexport const StyledDeleteBtn = styled.button`\n  text-align: center;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  padding: 4px 12px;\n\n  border-radius: 18px;\n  background: ${({ theme }) => theme.backgrounds.btnGradient};\n  box-shadow: ${({ theme }) => theme.shadows.deleteBtnShadow};\n`;\n\nexport const StyledEditBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 4px;\n  padding: 4px 12px;\n\n  background-color: transparent;\n\n  color: var(--white-60, rgba(255, 255, 255, 0.6));\n  text-align: center;\n  font-family: Poppins;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: 0.32px;\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteTransactionThunk } from 'redux/transactions/operations';\nimport {\n  StyledBtnBox,\n  StyledDeleteBtn,\n  StyledEditBtn,\n  StyledParWrapper,\n  StyledParagraph,\n  StyledSpan,\n  StyledTransaction,\n} from './TransactionsItem.styled';\nimport { selectCategories } from 'redux/transactions/selectors';\nimport sprite from '../../images/sprite.svg';\n\nconst TransactionsItem = ({ transaction }) => {\n  const categories = useSelector(selectCategories);\n  const category = categories.find(cat => cat.id === transaction.categoryId);\n  const dispatch = useDispatch();\n  const handleBtnDelete = id => {\n    dispatch(deleteTransactionThunk(id));\n  };\n  return (\n    <>\n      <StyledTransaction\n        $color={transaction.type === 'INCOME' ? '#ff868d' : '#FFB627'}\n      >\n        <StyledParWrapper>\n          <StyledParagraph>Date</StyledParagraph>\n          <span>{formatDate(transaction.transactionDate)}</span>\n        </StyledParWrapper>\n        <StyledParWrapper>\n          <StyledParagraph>Type</StyledParagraph>\n          <span>{transaction.type}</span>\n        </StyledParWrapper>\n        <StyledParWrapper>\n          <StyledParagraph>Category</StyledParagraph>\n          <span>{categories ? category.name : '-'}</span>\n        </StyledParWrapper>\n        <StyledParWrapper>\n          <StyledParagraph>Comment</StyledParagraph>\n          <StyledSpan>\n            {transaction.comment.length >= 25\n              ? `${transaction.comment.slice(0, 25)}...`\n              : transaction.comment}\n          </StyledSpan>\n        </StyledParWrapper>\n        <StyledParWrapper>\n          <StyledParagraph>Sum</StyledParagraph>\n          <span>{transaction.amount}</span>\n        </StyledParWrapper>\n        <StyledBtnBox>\n          <StyledDeleteBtn onClick={() => handleBtnDelete(transaction.id)}>\n            Delete\n          </StyledDeleteBtn>\n          <StyledEditBtn>\n            <svg width=\"14\" height=\"14\">\n              <use href={`${sprite}#edit`} />\n            </svg>\n            Edit\n          </StyledEditBtn>\n        </StyledBtnBox>\n      </StyledTransaction>\n    </>\n  );\n};\nfunction formatDate(dateString) {\n  const date = new Date(dateString);\n  const day = date.getDate().toString().padStart(2, '0');\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n  const year = date.getFullYear().toString().slice(-2);\n  return `${day}.${month}.${year}`;\n}\n\nexport default TransactionsItem;\n","import Loader from 'components/Loader/Loader';\nimport { StyledMobileWrapper } from 'components/TransactionsList/TransactionsList.styled';\nimport React from 'react';\nimport TransactionsItem from '../TransactionsItem/TransactionsItem';\nimport { useSelector } from 'react-redux';\nimport { selectError, selectTransactions } from 'redux/transactions/selectors';\nimport { selectLoading } from 'redux/auth/selectors';\n\nconst MobileList = () => {\n  const transactions = useSelector(selectTransactions);\n\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n  return (\n    <>\n      <StyledMobileWrapper>\n        {loading && <Loader />}\n        {error && <h1>Something went wrong... 😢</h1>}\n        {transactions.length > 0 ? (\n          transactions.map(transaction => (\n            <TransactionsItem key={transaction.id} transaction={transaction} />\n          ))\n        ) : (\n          <h3>Oh, you don't have transactions yet. Let's create one!</h3>\n        )}\n      </StyledMobileWrapper>\n    </>\n  );\n};\n\nexport default MobileList;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectCategories,\n  selectError,\n  selectLoading,\n  selectTransactions,\n} from 'redux/transactions/selectors';\nimport Loader from 'components/Loader/Loader';\nimport {\n  StyledHeaderTr,\n  StyledTable,\n  StyledTableBtnWrapper,\n  StyledTableWrapper,\n  StyledTbodyTable,\n  StyledTd,\n  StyledTdComment,\n  StyledTh,\n  StyledTr,\n  StyledTransactionsList,\n} from './TransactionsList.styled';\nimport sprite from '../../images/sprite.svg';\nimport {\n  StyledDeleteBtn,\n  StyledEditBtn,\n} from 'components/TransactionsItem/TransactionsItem.styled';\nimport { deleteTransactionThunk } from 'redux/transactions/operations';\n\nconst TransactionsList = () => {\n  const dispatch = useDispatch();\n  const transactions = useSelector(selectTransactions);\n  const categories = useSelector(selectCategories);\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  const handleTableBtnDelete = id => {\n    dispatch(deleteTransactionThunk(id));\n  };\n\n  return (\n    <StyledTransactionsList>\n      <StyledTableWrapper>\n        {loading && <Loader />}\n        {error && <h1>Something went wrong... 😢</h1>}\n        <StyledTable>\n          <thead>\n            <StyledHeaderTr>\n              <StyledTh>Date</StyledTh>\n              <StyledTh>Type</StyledTh>\n              <StyledTh>Category</StyledTh>\n              <StyledTh>Comment</StyledTh>\n              <StyledTh>Sum</StyledTh>\n            </StyledHeaderTr>\n          </thead>\n          <StyledTbodyTable>\n            {transactions.length > 0 ? (\n              transactions.map(transaction => (\n                <StyledTr key={transaction.id}>\n                  <StyledTd>{formatDate(transaction.transactionDate)}</StyledTd>\n                  <StyledTd>\n                    {transaction.type === 'INCOME' ? '+' : '-'}\n                  </StyledTd>\n                  <StyledTd>\n                    {categories.find(cat => cat.id === transaction.categoryId)\n                      ?.name || '-'}\n                  </StyledTd>\n                  <StyledTdComment>{transaction.comment}</StyledTdComment>\n                  <StyledTd\n                    $color={\n                      transaction.type === 'INCOME' ? '#FFB627' : '#FF868D'\n                    }\n                  >\n                    {transaction.amount}\n                  </StyledTd>\n                  <td>\n                    <StyledTableBtnWrapper>\n                      <StyledEditBtn>\n                        <svg width=\"14\" height=\"14\">\n                          <use href={`${sprite}#edit`} />\n                        </svg>\n                      </StyledEditBtn>\n                      <StyledDeleteBtn\n                        onClick={() => handleTableBtnDelete(transaction.id)}\n                      >\n                        Delete\n                      </StyledDeleteBtn>\n                    </StyledTableBtnWrapper>\n                  </td>\n                </StyledTr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan=\"6\">No transactions found.</td>\n              </tr>\n            )}\n          </StyledTbodyTable>\n        </StyledTable>\n      </StyledTableWrapper>\n    </StyledTransactionsList>\n  );\n};\nfunction formatDate(dateString) {\n  const date = new Date(dateString);\n  const day = date.getDate().toString().padStart(2, '0');\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n  const year = date.getFullYear().toString().slice(-2);\n  return `${day}.${month}.${year}`;\n}\n\nexport default TransactionsList;\n","import AddTransactionForm from 'components/AddTransactionForm/AddTransactionForm';\nimport ButtonAddTransactions from 'components/ButtonAddTransactions/ButtonAddTransactions';\nimport EditTransactionForm from 'components/EditTransactionForm/EditTransactionForm';\nimport ModalAddTransaction from 'components/ModalAddTransaction/ModalAddTransaction';\nimport ModalEditTransaction from 'components/ModalEditTransaction/ModalEditTransaction';\nimport MobileList from 'components/TransactionsList/MobileList';\nimport TransactionsList from 'components/TransactionsList/TransactionsList';\nimport React from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport { StyledContainer } from 'styles/GlobalStyles';\n\nconst HomeTab = () => {\n  const isTable = useMediaQuery({\n    query: '(min-width:768px)',\n  });\n  return (\n    <StyledContainer>\n      {isTable ? <TransactionsList /> : <MobileList />}\n      <ButtonAddTransactions />\n      <ModalAddTransaction />\n      <ModalEditTransaction />\n      <AddTransactionForm />\n      <EditTransactionForm />\n    </StyledContainer>\n  );\n};\n\nexport default HomeTab;\n","// transactions\n\nexport const selectTransactions = state =>\n  state.transactions.transactions.items;\nexport const selectLoading = state => state.transactions.transactions.isLoading;\nexport const selectError = state => state.transactions.transactions.error;\nexport const selectCategories = state =>\n  state.transactions.transactions.categories;\n\n// summary\n\nexport const selectCategoriesSummary = state =>\n  state.transactions.summary.categoriesSummary;\nexport const selectIncomeSummary = state =>\n  state.transactions.summary.incomeSummary;\nexport const selectExpenseSummary = state =>\n  state.transactions.summary.expenseSummary;\nexport const selectPeriodTotal = state =>\n  state.transactions.summary.periodTotal;\nexport const selectYear = state => state.transactions.summary.year;\nexport const selectMonth = state => state.transactions.summary.month;\n"],"names":["_jsx","children","StyledTransactionsList","styled","div","_templateObject","_taggedTemplateLiteral","StyledMobileWrapper","ul","_templateObject2","StyledTableWrapper","_templateObject3","StyledTable","table","_templateObject4","StyledHeaderTr","tr","_templateObject5","_ref","theme","backgrounds","tableHead","_ref2","shadows","default","_ref3","blur","backdropFilter","StyledTh","th","_templateObject6","_ref4","colors","mainWhite","StyledTbodyTable","tbody","_templateObject7","StyledTr","_templateObject8","_ref5","border","borderBottom","StyledTd","td","_templateObject9","props","$color","StyledTdComment","_templateObject10","StyledTableBtnWrapper","_templateObject11","StyledTransaction","li","StyledParWrapper","StyledParagraph","p","StyledSpan","span","StyledBtnBox","StyledDeleteBtn","button","btnGradient","deleteBtnShadow","StyledEditBtn","formatDate","dateString","date","Date","day","getDate","toString","padStart","month","getMonth","year","getFullYear","slice","concat","transaction","categories","useSelector","selectCategories","category","find","cat","id","categoryId","dispatch","useDispatch","_Fragment","_jsxs","type","transactionDate","name","comment","length","amount","onClick","deleteTransactionThunk","width","height","href","sprite","transactions","selectTransactions","loading","selectLoading","error","selectError","Loader","map","TransactionsItem","_categories$find","colSpan","isTable","useMediaQuery","query","StyledContainer","TransactionsList","MobileList","ButtonAddTransactions","ModalAddTransaction","ModalEditTransaction","AddTransactionForm","EditTransactionForm","state","items","isLoading","selectCategoriesSummary","summary","categoriesSummary","selectIncomeSummary","incomeSummary","selectExpenseSummary","expenseSummary","selectPeriodTotal","periodTotal"],"sourceRoot":""}
{"version":3,"file":"static/js/739.5119e916.chunk.js","mappings":"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","sources":["components/StatisticsDashboard/StatisticsDashboard.styled.js","components/Chart/Chart.styled.js","components/Chart/Chart.jsx","components/StatisticsDashboard/StatisticsDashboard.jsx","components/StatisticsTable/StatisticsTable.styled.js","components/StatisticsTable/StatisticsTable.jsx","pages/StatisticsTab/StatisticsTab.styled.js","pages/StatisticsTab/StatisticsTab.jsx","redux/transactions/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledSelectMainDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 16px 0;\n  min-width: 280px;\n  max-width: 280px;\n  margin: 0 auto;\n\n  @media only screen and (min-width: 768px) {\n    flex-direction: row;\n    gap: 16px;\n    padding: 20px 0 0 0;\n    min-width: 192px;\n    max-width: 192px;\n    margin: 0;\n  }\n  @media only screen and (min-width: 1280px) {\n    padding: 20px 20px 0 0;\n    margin-top: 60px;\n    min-width: 213px;\n    max-width: 213px;\n    gap: 32px;\n  }\n`;\nexport const styles = {\n  control: (baseStyles, state) => ({\n    ...baseStyles,\n    minWidth: 280,\n    maxWidth: 280,\n    minHeight: 50,\n    borderRadius: '8px',\n    background: ' rgba(133, 93, 175, 0.13) ',\n    '@media only screen and (min-width:768px)': {\n      ...styles['@media only screen and (min-width: 768px)'],\n      minWidth: 160,\n      maxWidth: 160,\n    },\n    '@media only screen and (min-width:1280px)': {\n      ...styles['@media only screen and (min-width: 1280px)'],\n      minWidth: 181,\n      maxWidth: 181,\n    },\n  }),\n  option: (styles, state) => ({\n    ...styles,\n    backgroundColor: state.isSelected ? 'rgba(255, 255, 255, 0.10)' : '',\n    color: state.isSelected ? '#FF868D' : '',\n    ':hover': {\n      background: 'rgba(255, 255, 255, 0.10)',\n      color: '#FF868D',\n    },\n  }),\n  menu: baseStyles => ({\n    ...baseStyles,\n    background:\n      'linear-gradient(0deg, rgba(87, 38, 146, 0.813) 0%, rgba(80, 48, 154, 0.9) 43.14%, rgba(99, 63, 159, 0.9) 73.27%, rgba(76, 46, 109, 0.8) 120.03%) ',\n    border: 'none ',\n    borderRadius: '8px ',\n  }),\n  menuList: base => ({\n    ...base,\n\n    '::-webkit-scrollbar': {\n      width: '4px',\n      height: '0px',\n    },\n    '::-webkit-scrollbar-track': {\n      background: '#9065d1',\n    },\n    '::-webkit-scrollbar-thumb': {\n      background: '#6b438c',\n    },\n    '::-webkit-scrollbar-thumb:hover': {\n      background: '#330a65',\n    },\n  }),\n};\n","import styled from 'styled-components';\nexport const StyledChartP = styled.p`\n  position: absolute;\n  left: 50%;\n  top: 53%;\n  transform: translate(-50%, -50%);\n  color: var(--white, #fbfbfb);\n  text-align: center;\n  font-size: 18px;\n  font-weight: 600;\n  letter-spacing: 2px;\n`;\nexport const StyledChartDiv = styled.div`\n  position: relative;\n  width: 280px;\n  height: 280px;\n  margin-top: 8px;\n  padding: 0 auto;\n  @media only screen and (min-width: 768px) {\n    width: 336px;\n    height: 336px;\n    margin-top: 20px;\n  }\n  @media only screen and (min-width: 1280px) {\n    width: 288px;\n    height: 288px;\n  }\n`;\n","import React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport pngwing from '../../images/pngwing.webp';\nimport { StyledChartP, StyledChartDiv } from './Chart.styled';\nimport { selectPeriodTotal } from 'redux/transactions/selectors';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nChartJS.register(ArcElement, Tooltip, Legend);\nconst Chart = ({ dataDoughnut, categories }) => {\n  const periodTotal = useSelector(selectPeriodTotal);\n  return (\n    <StyledChartDiv>\n      {categories.length > 1 ? (\n        <div>\n          <Doughnut data={dataDoughnut} />\n          <StyledChartP>₴ {periodTotal}</StyledChartP>\n        </div>\n      ) : (\n        <img src={pngwing} alt=\"fff\" />\n      )}\n    </StyledChartDiv>\n  );\n};\n\nexport default Chart;\n\nChart.propTypes = {\n  dataDoughnut: PropTypes.objectOf(PropTypes.array),\n  categories: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      type: PropTypes.string,\n      total: PropTypes.number,\n    })\n  ),\n};\n","import React, { useEffect, useState } from 'react';\nimport Select from 'react-select';\nimport { StyledSelectMainDiv, styles } from './StatisticsDashboard.styled';\n\nimport { useDispatch } from 'react-redux';\nimport { fetchTransactionsSummary } from 'redux/transactions/operations';\n\nconst StatisticsDashboard = () => {\n  const dispatch = useDispatch();\n  const [selectedMonth, setSelectedMonth] = useState({\n    value: 10,\n    label: 'October',\n  });\n  const [selectedYear, setSelectedYear] = useState({\n    value: 2023,\n    label: '2023',\n  });\n\n  const onMonthChange = month => {\n    setSelectedMonth(month);\n  };\n  const onYearClick = year => {\n    setSelectedYear(year);\n  };\n\n  const optionsYears = [\n    { value: 2023, label: '2023' },\n    { value: 2022, label: '2022' },\n    { value: 2021, label: '2021' },\n    { value: 2019, label: '2019' },\n    { value: 2018, label: '2018' },\n    { value: 2017, label: '2017' },\n  ];\n  const optionsMonth = [\n    { value: 1, label: 'January' },\n    { value: 2, label: 'February' },\n    { value: 3, label: 'March' },\n    { value: 4, label: 'April' },\n    { value: 5, label: 'May' },\n    { value: 6, label: 'June' },\n    { value: 7, label: 'July' },\n    { value: 8, label: 'August' },\n    { value: 9, label: 'September' },\n    { value: 10, label: 'October' },\n    { value: 11, label: 'November' },\n    { value: 12, label: 'December' },\n  ];\n\n  useEffect(() => {\n    const data = {\n      month: selectedMonth.value,\n      year: selectedYear.value,\n    };\n    dispatch(fetchTransactionsSummary(data));\n  }, [dispatch, selectedMonth, selectedYear]);\n  return (\n    <StyledSelectMainDiv>\n      <Select\n        styles={styles}\n        value={selectedMonth}\n        onChange={value => onMonthChange(value)}\n        options={optionsMonth}\n        placeholder={selectedMonth.label}\n        theme={theme => ({\n          ...theme,\n          colors: {\n            neutral50: '#fff',\n          },\n        })}\n      />\n\n      <div>\n        <Select\n          styles={styles}\n          value={selectedYear}\n          onChange={value => onYearClick(value)}\n          options={optionsYears}\n          placeholder={selectedYear.label}\n          theme={theme => ({\n            ...theme,\n            colors: {\n              neutral50: '#fff',\n            },\n          })}\n        />\n      </div>\n    </StyledSelectMainDiv>\n  );\n};\n\nexport default StatisticsDashboard;\n","import styled from 'styled-components';\nexport const StyledTableDiv = styled.div`\n  width: 280px;\n  margin: 0 auto;\n  @media only screen and (min-width: 768px) {\n    width: 336px;\n    padding: 0;\n  }\n  @media only screen and (min-width: 1280px) {\n    width: 395px;\n  }\n`;\nexport const StyledTableTd = styled.td`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  font-size: 14px;\n  align-items: center;\n`;\nexport const StyledTableTr = styled.tr`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.41);\n  padding: 16px;\n`;\nexport const StyledTableTrHead = styled.tr`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.41);\n  padding: 16px;\n  margin-top: 20px;\n\n  font-family: Poppins;\n  font-size: 16px;\n  font-weight: 600;\n  width: 280px;\n  max-height: 56px;\n  border-radius: 8px;\n  background: rgba(82, 59, 126, 0.6);\n\n  box-shadow: 0px 4px 60px 0px rgba(0, 0, 0, 0.25);\n\n  @media only screen and (min-width: 768px) {\n    width: 336px;\n  }\n  @media only screen and (min-width: 1280px) {\n    width: 395px;\n  }\n`;\nexport const StyledTableTh = styled.th`\n  display: inline-block;\n`;\nexport const StyledTableH3 = styled.h3`\n  margin: 30px auto;\n  font-size: 20px;\n  text-align: center;\n  font-weight: 400;\n  max-width: 320px;\n  line-height: 1.5;\n\n  padding: 15px 0;\n  border-top: 1px solid white;\n  border-bottom: 2px solid white;\n  @media only screen and (min-width: 768px) {\n    margin: 200px 50px 50px 50px;\n  }\n`;\nexport const StyledTableBody = styled.tbody`\n  display: flex;\n  flex-direction: column;\n\n  max-width: 280px;\n  overflow-y: scroll;\n  @media only screen and (min-width: 768px) {\n    max-width: 336px;\n    height: 450px;\n  }\n  @media only screen and (min-width: 1280px) {\n    max-width: 395px;\n    height: calc(100vh - 400px);\n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: rgba(82, 59, 126, 0.3);\n  }\n  &::-webkit-scrollbar-track {\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n  }\n  &::-webkit-scrollbar {\n    width: 0.5em;\n  }\n`;\n","import React from 'react';\nimport {\n  StyledTableTr,\n  StyledTableTd,\n  StyledTableTh,\n  StyledTableTrHead,\n  StyledTableBody,\n  StyledTableH3,\n  StyledTableDiv,\n} from './StatisticsTable.styled';\nimport { useSelector } from 'react-redux';\n\nimport {\n  selectExpenseSummary,\n  selectIncomeSummary,\n} from 'redux/transactions/selectors';\nimport PropTypes from 'prop-types';\n\nconst StatisticsTable = ({ categories, dataDoughnut }) => {\n  const income = useSelector(selectIncomeSummary);\n  const expense = useSelector(selectExpenseSummary);\n  return (\n    <StyledTableDiv>\n      {categories.length > 1 ? (\n        <table>\n          <thead>\n            <StyledTableTrHead>\n              <StyledTableTh>Category</StyledTableTh>\n              <StyledTableTh>Sum</StyledTableTh>\n            </StyledTableTrHead>\n          </thead>\n\n          <StyledTableBody>\n            {categories.map(({ name, total, type }, index) => {\n              if (type !== 'INCOME') {\n                return (\n                  <StyledTableTr key={name}>\n                    <StyledTableTd>\n                      <div\n                        style={{\n                          backgroundColor: `${dataDoughnut.datasets[0].backgroundColor[index]}`,\n                          width: '24px',\n                          height: '24px',\n                        }}\n                      ></div>\n                      {name}\n                    </StyledTableTd>\n                    <td\n                      style={{\n                        fontSize: '14px',\n                      }}\n                    >\n                      {total < 0 ? -total : total}\n                    </td>\n                  </StyledTableTr>\n                );\n              }\n              return '';\n            })}\n          </StyledTableBody>\n          <tfoot>\n            <StyledTableTr\n              style={{\n                border: 'none',\n              }}\n            >\n              <td>Expenses:</td>\n              <td\n                style={{\n                  color: '#FF868D',\n                }}\n              >\n                {-expense}\n              </td>\n            </StyledTableTr>\n            <StyledTableTr\n              style={{\n                border: 'none',\n              }}\n            >\n              <td>Income:</td>\n              <td\n                style={{\n                  color: '#FF868D',\n                }}\n              >\n                {income}\n              </td>\n            </StyledTableTr>\n          </tfoot>\n        </table>\n      ) : (\n        <StyledTableH3>\n          It looks like you have not made any monetary transactions during this\n          time period\n        </StyledTableH3>\n      )}\n    </StyledTableDiv>\n  );\n};\n\nexport default StatisticsTable;\n\nStatisticsTable.propTypes = {\n  categories: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      type: PropTypes.string,\n      total: PropTypes.number,\n    })\n  ),\n  dataDoughnut: PropTypes.object,\n};\n","import styled from 'styled-components';\nimport { StyledContainer } from 'styles/GlobalStyles';\n\nexport const StyledStatisticDivMain = styled(StyledContainer)`\n  color: white;\n  display: block;\n  position: relative;\n\n  @media only screen and (min-width: 768px) {\n    display: flex;\n    margin: 0;\n    justify-content: space-between;\n\n    max-width: 100%;\n    height: 720px;\n  }\n  @media only screen and (min-width: 1280px) {\n    max-width: 803px;\n    height: calc(100vh - 70px);\n\n    padding: 20px 0 0 0;\n  }\n`;\nexport const StyledStatisticDivChart = styled.div`\n  position: relative;\n  width: 280px;\n  padding: 16px 0;\n  margin: 0 auto;\n  @media only screen and (min-width: 768px) {\n    width: 336px;\n    padding: 0;\n    margin: 0;\n  }\n  @media only screen and (min-width: 1280px) {\n    width: 288px;\n  }\n`;\nexport const StyledStatisticTitle = styled.h2`\n  color: ${({ theme }) => theme.colors.mainWhite};\n  text-align: left;\n  font-size: 30px;\n  font-weight: 400;\n  max-width: 280px;\n`;\n","import Chart from 'components/Chart/Chart';\nimport StatisticsDashboard from 'components/StatisticsDashboard/StatisticsDashboard';\nimport StatisticsTable from 'components/StatisticsTable/StatisticsTable';\n\nimport { selectCategoriesSummary } from '../../redux/transactions/selectors';\n\nimport { useSelector } from 'react-redux';\nimport React from 'react';\n\nimport {\n  StyledStatisticDivChart,\n  StyledStatisticDivMain,\n  StyledStatisticTitle,\n} from './StatisticsTab.styled';\n\nconst StatisticsTab = () => {\n  const categories = useSelector(selectCategoriesSummary);\n  const categoriesValue = categories.map(({ total, type }) => {\n    if (type !== 'INCOME') {\n      if (total < 0) {\n        return -total;\n      }\n      return total;\n    }\n    return '';\n  });\n  const dataDoughnut = {\n    labels: [],\n    datasets: [\n      {\n        data: [...categoriesValue],\n        backgroundColor: [\n          '#00ff3c',\n          '#FED057',\n          '#006825',\n\n          '#FFD8D0',\n          '#4A56E2',\n          '#ffff00',\n          '#6E78E8',\n          '#81E1FF',\n          '#C5BAFF',\n\n          '#e0661b',\n\n          '#FD9498',\n        ],\n        borderColor: [\n          '#018f6e93',\n          '#c5a04478',\n          '#198d7389',\n\n          '#b79993a2',\n          '#333c9c8d',\n          '#18876f94',\n          '#4d54a39c',\n          '#5695a98f',\n          '#877fb09d',\n\n          '#40a8929e',\n\n          '#b7696ca4',\n        ],\n        borderWidth: 1,\n        cutout: '70%',\n      },\n    ],\n  };\n\n  return (\n    <StyledStatisticDivMain>\n      <StyledStatisticDivChart\n        style={{\n          zIndex: '2',\n        }}\n      >\n        <StyledStatisticTitle>Statistics</StyledStatisticTitle>\n        <Chart dataDoughnut={dataDoughnut} categories={categories} />\n      </StyledStatisticDivChart>\n      <div\n        style={{\n          zIndex: '2',\n        }}\n      >\n        <StatisticsDashboard />\n        <StatisticsTable categories={categories} dataDoughnut={dataDoughnut} />\n      </div>\n    </StyledStatisticDivMain>\n  );\n};\n\nexport default StatisticsTab;\n","import { createSelector } from 'reselect';\n// transactions\n\nexport const selectTransactions = state =>\n  state.transactions.transactions.items;\nexport const selectLoading = state => state.transactions.transactions.isLoading;\nexport const selectError = state => state.transactions.transactions.error;\nexport const selectCategories = state =>\n  state.transactions.transactions.categories;\n\nexport const selectAllCategories = createSelector(\n  [selectCategories],\n  categories => {\n    return categories;\n  }\n);\n\n// sort transactions\nexport const selectFIltered = (state, sortCriteria) => {\n  const transactions = selectTransactions(state);\n  const categories = selectCategories(state);\n\n  const sortedTransactions = [...transactions];\n  switch (sortCriteria.value) {\n    case 'date':\n      sortedTransactions.sort((a, b) => {\n        const dateA = new Date(a.transactionDate);\n        const dateB = new Date(b.transactionDate);\n        return sortCriteria.isReverse ? dateA - dateB : dateB - dateA;\n      });\n      break;\n    case 'amount':\n      sortedTransactions.sort((a, b) => {\n        return sortCriteria.isReverse\n          ? b.amount - a.amount\n          : a.amount - b.amount;\n      });\n      break;\n    case 'category':\n      sortedTransactions.sort((a, b) => {\n        const categoryA =\n          categories.find(cat => cat.id === a.categoryId)?.name || '';\n        const categoryB =\n          categories.find(cat => cat.id === b.categoryId)?.name || '';\n        return sortCriteria.isReverse\n          ? categoryB.localeCompare(categoryA)\n          : categoryA.localeCompare(categoryB);\n      });\n      break;\n    default:\n      return sortedTransactions.sort(\n        (a, b) => new Date(b.transactionDate) - new Date(a.transactionDate)\n      );\n  }\n  return sortedTransactions;\n};\n\n// summary\nexport const selectCategoriesSummary = state =>\n  state.transactions.summary.categoriesSummary;\nexport const selectIncomeSummary = state =>\n  state.transactions.summary.incomeSummary;\nexport const selectExpenseSummary = state =>\n  state.transactions.summary.expenseSummary;\nexport const selectPeriodTotal = state =>\n  state.transactions.summary.periodTotal;\nexport const selectYear = state => state.transactions.summary.year;\nexport const selectMonth = state => state.transactions.summary.month;\n"],"names":["StyledSelectMainDiv","styled","div","_templateObject","_taggedTemplateLiteral","styles","control","baseStyles","state","_objectSpread","minWidth","maxWidth","minHeight","borderRadius","background","option","backgroundColor","isSelected","color","menu","border","menuList","base","width","height","StyledChartP","p","StyledChartDiv","_templateObject2","ChartJS","register","ArcElement","Tooltip","Legend","_ref","dataDoughnut","categories","periodTotal","useSelector","selectPeriodTotal","_jsx","children","length","_jsxs","Doughnut","data","src","pngwing","alt","dispatch","useDispatch","_useState","useState","value","label","_useState2","_slicedToArray","selectedMonth","setSelectedMonth","_useState3","_useState4","selectedYear","setSelectedYear","useEffect","month","year","fetchTransactionsSummary","Select","onChange","options","placeholder","theme","colors","neutral50","StyledTableDiv","StyledTableTd","td","StyledTableTr","tr","_templateObject3","StyledTableTrHead","_templateObject4","StyledTableTh","th","_templateObject5","StyledTableH3","h3","_templateObject6","StyledTableBody","tbody","_templateObject7","income","selectIncomeSummary","expense","selectExpenseSummary","map","_ref2","index","name","total","type","style","concat","datasets","fontSize","StyledStatisticDivMain","StyledContainer","StyledStatisticDivChart","StyledStatisticTitle","h2","mainWhite","selectCategoriesSummary","categoriesValue","labels","_toConsumableArray","borderColor","borderWidth","cutout","zIndex","Chart","StatisticsDashboard","StatisticsTable","selectTransactions","transactions","items","selectLoading","isLoading","selectError","error","selectCategories","selectAllCategories","createSelector","selectFIltered","sortCriteria","sortedTransactions","sort","a","b","dateA","Date","transactionDate","dateB","isReverse","amount","_categories$find","_categories$find2","categoryA","find","cat","id","categoryId","categoryB","localeCompare","summary","categoriesSummary","incomeSummary","expenseSummary"],"sourceRoot":""}
{"version":3,"file":"static/js/373.b46dfc72.chunk.js","mappings":"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","sources":["components/AddTransactionForm/AddTransactionForm.styled.js","components/AddTransactionForm/AddTransactionForm.jsx","components/ButtonAddTransactions/ButtonAddTransactions.jsx","components/EditTransactionForm/EditTransactionForm.jsx","components/ModalAddTransaction/ModalAddTransaction.jsx","components/ModalEditTransaction/ModalEditTransaction.jsx","components/TransactionsList/TransactionsList.styled.js","components/TransactionsItem/TransactionsItem.styled.js","components/TransactionsItem/TransactionsItem.jsx","components/TransactionsList/MobileList.jsx","components/TransactionsList/TransactionsList.jsx","pages/HomeTab/HomeTab.jsx","redux/transactions/selectors.js"],"sourcesContent":["import { styled } from 'styled-components';\nimport { Form, Field } from 'formik';\nimport DatePicker from 'react-datepicker';\n\nexport const StyledContainer = styled.div`\n  padding: 20px 0;\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 280px;\n`;\n\nexport const StyledField = styled(Field)`\n  width: 280px;\n  height: 75px;\n  color: rgba(255, 255, 255, 0.6);\n  background: transparent;\n  border: none;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.4);\n  padding: 0 20px;\n`;\n\nexport const StyledSelect = styled.select`\n  width: 280px;\n  height: 75px;\n  color: rgba(255, 255, 255, 0.6);\n  background: transparent;\n  padding: 0 20px;\n  border: none;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.4);\n`;\n\nexport const AddFormTitle = styled.h2`\n  text-align: center;\n  font-size: 24px;\n  margin-bottom: 34px;\n`;\n\nexport const StyledDatePicker = styled(DatePicker)`\n  width: 280px;\n  height: 75px;\n  padding: 0 20px;\n  color: ${({ theme }) => theme.colors.mainWhite};\n  background: transparent;\n  padding: 0 20px;\n  border: none;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.4);\n`;\n\nexport const BtnBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const BtnAdd = styled.button`\n  width: 280px;\n  height: 50px;\n  padding: 13px 100px;\n  border-radius: 20px;\n  font-size: 18px;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  color: ${({ theme }) => theme.colors.mainWhite};\n  background: ${({ theme }) => theme.backgrounds.btnGradient};\n  margin-top: 40px;\n`;\n\nexport const BtnCancel = styled.button`\n  width: 280px;\n  height: 50px;\n  padding: 13px 100px;\n  border-radius: 20px;\n  font-size: 18px;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  color: #623f8b;\n  background-color: ${({ theme }) => theme.colors.mainWhite};\n  text-align: center;\n`;\n","import React, { useState } from 'react';\nimport {\n  AddFormTitle,\n  BtnAdd,\n  BtnBox,\n  BtnCancel,\n  StyledContainer,\n  StyledDatePicker,\n  StyledField,\n  StyledForm,\n  StyledSelect,\n} from './AddTransactionForm.styled';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { addTransactionThunk } from 'redux/transactions/operations';\nimport { object, string } from 'yup';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport sprite from '../../images/sprite.svg';\n\nconst categories = [\n  'Main expenses',\n  'Products',\n  'Car',\n  'Self Care',\n  'Child Care',\n  'Household Products',\n  'Education',\n  'Leisure',\n  'Other expenses',\n  'Entertainment',\n];\n\nconst AddSchema = object({\n  amount: string().required().min(2, 'Too Short!').max(50, 'Too Long!'),\n  comment: string().min(2, 'Too Short!').max(50, 'Too Long!'),\n  category: string().oneOf(categories).required(),\n});\n\nconst AddTransactionForm = () => {\n  const dispatch = useDispatch();\n  const [startDate, setStartDate] = useState();\n  const handleSubmit = values => {\n    console.log('submit', values);\n    dispatch(addTransactionThunk(values));\n  };\n  return (\n    <div>\n      <StyledContainer>\n        <AddFormTitle>Add transaction</AddFormTitle>\n        <Formik\n          initialValues={{\n            type: 'Expense',\n            category: '',\n            amount: '',\n            date: new Date().toLocaleDateString('uk-UA'),\n            comment: '',\n          }}\n          validationSchema={AddSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ errors, touched, values, handleChange }) => (\n            <StyledForm autoComplete=\"off\">\n              <StyledSelect\n                name=\"type\"\n                value={values.type}\n                onChange={handleChange}\n              >\n                <option>Income</option>\n                <option>Expense</option>\n              </StyledSelect>\n              <StyledSelect\n                name=\"category\"\n                value={values.category}\n                onChange={handleChange}\n              >\n                <option disabled value=\"\">\n                  Select a category\n                </option>\n                {categories.map(category => (\n                  <option key={category}>{category}</option>\n                ))}\n              </StyledSelect>\n              <StyledField name=\"amount\" placeholder=\"0.00\" />\n\n              <StyledDatePicker\n                name=\"date\"\n                value={values.date}\n                onChange={date => {\n                  handleChange({\n                    target: {\n                      name: 'date',\n                      value: date.toLocaleDateString('uk-UA'),\n                    },\n                  });\n                  setStartDate(date);\n                }}\n                dateFormat=\"dd.MM.yyyy\"\n                // placeholderText={`${new Date().toLocaleDateString('uk-UA')}`}\n                showIcon\n                selected={startDate}\n                maxDate={new Date()}\n                style={{ float: 'right' }}\n                icon={\n                  <svg width=\"24\" height=\"24\">\n                    <use href={`${sprite}#calendar`} />\n                  </svg>\n                }\n              />\n\n              <StyledField\n                name=\"comment\"\n                type=\"comment\"\n                placeholder=\"Comment\"\n              />\n              {errors.comment && touched.comment ? (\n                <div>{errors.comment}</div>\n              ) : null}\n\n              <BtnBox>\n                <BtnAdd type=\"submit\">Add</BtnAdd>\n                <BtnCancel type=\"submit\">Cancel</BtnCancel>\n              </BtnBox>\n            </StyledForm>\n          )}\n        </Formik>\n      </StyledContainer>\n    </div>\n  );\n};\n\nexport default AddTransactionForm;\n","import React from 'react';\n\nconst ButtonAddTransactions = () => {\n  return <div>ButtonAddTransactions</div>;\n};\n\nexport default ButtonAddTransactions;\n","import React from 'react';\n\nconst EditTransactionForm = () => {\n  return <div>EditTransactionForm</div>;\n};\n\nexport default EditTransactionForm;\n","import React from 'react';\n\nconst ModalAddTransaction = () => {\n  return <div>ModalAddTransaction</div>;\n};\n\nexport default ModalAddTransaction;\n","import React from 'react';\n\nconst ModalEditTransaction = () => {\n  return <div>ModalEditTransaction</div>;\n};\n\nexport default ModalEditTransaction;\n","import styled from 'styled-components';\n\n// ==============Mobile==================\n\nexport const StyledTransactionsList = styled.div`\n  margin: 0 auto;\n`;\n\nexport const StyledMobileWrapper = styled.ul`\n  max-height: 50vh;\n  overflow-y: scroll;\n  &::-webkit-scrollbar-thumb {\n    background-color: rgba(82, 59, 126, 0.3);\n  }\n  &::-webkit-scrollbar-track {\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n  }\n  &::-webkit-scrollbar {\n    width: 0.5em;\n  }\n  @media only screen and (min-width: 320px) and (max-width: 767px) {\n    display: block;\n    list-style: none;\n  }\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\n// ==============Table==================\nexport const StyledTableWrapper = styled.div`\n  display: none;\n  margin: 0 auto;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: column;\n  }\n`;\nexport const StyledTable = styled.table`\n  border-collapse: collapse;\n  width: 100%;\n`;\nexport const StyledHeaderTr = styled.tr`\n  display: flex;\n  align-items: center;\n\n  padding: 16px 20px;\n  border-radius: 8px;\n  background: ${({ theme }) => theme.backgrounds.tableHead};\n  box-shadow: ${({ theme }) => theme.shadows.default};\n  backdrop-filter: ${({ theme }) => theme.blur.backdropFilter};\n\n  & :nth-child(3) {\n    margin-left: -15px;\n  }\n  & :nth-child(4) {\n    margin-left: -30px;\n  }\n  & :nth-child(5) {\n    margin-left: 18px;\n  }\n  & :nth-child(:not(:last-child)) {\n    margin-right: 0;\n  }\n  @media only screen and (min-width: 768px) {\n    gap: 60px;\n  }\n`;\n\nexport const StyledTh = styled.th`\n  text-align: center;\n  font-size: 16px;\n  font-weight: 400;\n\n  color: ${({ theme }) => theme.colors.mainWhite};\n`;\nexport const StyledTbodyTable = styled.tbody`\n  display: block;\n\n  max-height: 50vh;\n  overflow-y: scroll;\n  &::-webkit-scrollbar-thumb {\n    background-color: rgba(82, 59, 126, 0.3);\n  }\n  &::-webkit-scrollbar-track {\n    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n  }\n  &::-webkit-scrollbar {\n    width: 0.5em;\n  }\n`;\n\nexport const StyledTr = styled.tr`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px 20px;\n  border-bottom: ${({ theme }) => theme.border.borderBottom};\n\n  gap: 50px;\n`;\nexport const StyledTd = styled.td`\n  min-width: 50px;\n  text-align: center;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  color: ${props => props.$color};\n`;\nexport const StyledTdComment = styled(StyledTd)`\n  text-align: start;\n  flex-shrink: 1;\n  flex-basis: 100px;\n`;\nexport const StyledTableBtnWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n","import styled from 'styled-components';\n\nexport const StyledTransaction = styled.li`\n  margin: 0 auto;\n  min-width: 280px;\n  max-width: 360px;\n  margin-bottom: 8px;\n  border-radius: 10px;\n  background: rgba(255, 255, 255, 0.1);\n  border-left: 5px solid ${props => props.$color};\n  @media only screen and (min-width: 320px) and (max-width: 767px) {\n    display: block;\n    list-style: none;\n  }\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const StyledParWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px 20px;\n  border-bottom: ${({ theme }) => theme.border.borderBottom};\n`;\nexport const StyledParagraph = styled.p`\n  text-align: right;\n  font-family: Poppins;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  color: ${({ theme }) => theme.colors.mainWhite};\n`;\n\nexport const StyledSpan = styled.span`\n  max-width: 120px;\n`;\nexport const StyledBtnBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 12px 20px;\n`;\n\nexport const StyledDeleteBtn = styled.button`\n  text-align: center;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  padding: 4px 12px;\n\n  border-radius: 18px;\n  background: ${({ theme }) => theme.backgrounds.btnGradient};\n  box-shadow: ${({ theme }) => theme.shadows.deleteBtnShadow};\n`;\n\nexport const StyledEditBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 4px;\n  padding: 4px 12px;\n\n  background-color: transparent;\n\n  color: var(--white-60, rgba(255, 255, 255, 0.6));\n  text-align: center;\n  font-family: Poppins;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: 0.32px;\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteTransactionThunk } from 'redux/transactions/operations';\nimport {\n  StyledBtnBox,\n  StyledDeleteBtn,\n  StyledEditBtn,\n  StyledParWrapper,\n  StyledParagraph,\n  StyledSpan,\n  StyledTransaction,\n} from './TransactionsItem.styled';\nimport { selectCategories } from 'redux/transactions/selectors';\nimport sprite from '../../images/sprite.svg';\n\nconst TransactionsItem = ({ transaction }) => {\n  const categories = useSelector(selectCategories);\n  const category = categories.find(cat => cat.id === transaction.categoryId);\n  const dispatch = useDispatch();\n  const handleBtnDelete = id => {\n    dispatch(deleteTransactionThunk(id));\n  };\n  return (\n    <>\n      <StyledTransaction\n        $color={transaction.type === 'INCOME' ? '#ff868d' : '#FFB627'}\n      >\n        <StyledParWrapper>\n          <StyledParagraph>Date</StyledParagraph>\n          <span>{formatDate(transaction.transactionDate)}</span>\n        </StyledParWrapper>\n        <StyledParWrapper>\n          <StyledParagraph>Type</StyledParagraph>\n          <span>{transaction.type}</span>\n        </StyledParWrapper>\n        <StyledParWrapper>\n          <StyledParagraph>Category</StyledParagraph>\n          <span>{categories ? category.name : '-'}</span>\n        </StyledParWrapper>\n        <StyledParWrapper>\n          <StyledParagraph>Comment</StyledParagraph>\n          <StyledSpan>\n            {transaction.comment.length >= 25\n              ? `${transaction.comment.slice(0, 25)}...`\n              : transaction.comment}\n          </StyledSpan>\n        </StyledParWrapper>\n        <StyledParWrapper>\n          <StyledParagraph>Sum</StyledParagraph>\n          <span>{transaction.amount}</span>\n        </StyledParWrapper>\n        <StyledBtnBox>\n          <StyledDeleteBtn onClick={() => handleBtnDelete(transaction.id)}>\n            Delete\n          </StyledDeleteBtn>\n          <StyledEditBtn>\n            <svg width=\"14\" height=\"14\">\n              <use href={`${sprite}#edit`} />\n            </svg>\n            Edit\n          </StyledEditBtn>\n        </StyledBtnBox>\n      </StyledTransaction>\n    </>\n  );\n};\nfunction formatDate(dateString) {\n  const date = new Date(dateString);\n  const day = date.getDate().toString().padStart(2, '0');\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n  const year = date.getFullYear().toString().slice(-2);\n  return `${day}.${month}.${year}`;\n}\n\nexport default TransactionsItem;\n","import Loader from 'components/Loader/Loader';\nimport { StyledMobileWrapper } from 'components/TransactionsList/TransactionsList.styled';\nimport React from 'react';\nimport TransactionsItem from '../TransactionsItem/TransactionsItem';\nimport { useSelector } from 'react-redux';\nimport { selectError, selectTransactions } from 'redux/transactions/selectors';\nimport { selectLoading } from 'redux/auth/selectors';\n\nconst MobileList = () => {\n  const transactions = useSelector(selectTransactions);\n\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n  return (\n    <>\n      <StyledMobileWrapper>\n        {loading && <Loader />}\n        {error && <h1>Something went wrong... 😢</h1>}\n        {transactions.length > 0 ? (\n          transactions.map(transaction => (\n            <TransactionsItem key={transaction.id} transaction={transaction} />\n          ))\n        ) : (\n          <h3>Oh, you don't have transactions yet. Let's create one!</h3>\n        )}\n      </StyledMobileWrapper>\n    </>\n  );\n};\n\nexport default MobileList;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectCategories,\n  selectError,\n  selectLoading,\n  selectTransactions,\n} from 'redux/transactions/selectors';\nimport Loader from 'components/Loader/Loader';\nimport {\n  StyledHeaderTr,\n  StyledTable,\n  StyledTableBtnWrapper,\n  StyledTableWrapper,\n  StyledTbodyTable,\n  StyledTd,\n  StyledTdComment,\n  StyledTh,\n  StyledTr,\n  StyledTransactionsList,\n} from './TransactionsList.styled';\nimport sprite from '../../images/sprite.svg';\nimport {\n  StyledDeleteBtn,\n  StyledEditBtn,\n} from 'components/TransactionsItem/TransactionsItem.styled';\nimport { deleteTransactionThunk } from 'redux/transactions/operations';\n\nconst TransactionsList = () => {\n  const dispatch = useDispatch();\n  const transactions = useSelector(selectTransactions);\n  const categories = useSelector(selectCategories);\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  const handleTableBtnDelete = id => {\n    dispatch(deleteTransactionThunk(id));\n  };\n\n  return (\n    <StyledTransactionsList>\n      <StyledTableWrapper>\n        {loading && <Loader />}\n        {error && <h1>Something went wrong... 😢</h1>}\n        <StyledTable>\n          <thead>\n            <StyledHeaderTr>\n              <StyledTh>Date</StyledTh>\n              <StyledTh>Type</StyledTh>\n              <StyledTh>Category</StyledTh>\n              <StyledTh>Comment</StyledTh>\n              <StyledTh>Sum</StyledTh>\n            </StyledHeaderTr>\n          </thead>\n          <StyledTbodyTable>\n            {transactions.length > 0 ? (\n              transactions.map(transaction => (\n                <StyledTr key={transaction.id}>\n                  <StyledTd>{formatDate(transaction.transactionDate)}</StyledTd>\n                  <StyledTd>\n                    {transaction.type === 'INCOME' ? '+' : '-'}\n                  </StyledTd>\n                  <StyledTd>\n                    {categories.find(cat => cat.id === transaction.categoryId)\n                      ?.name || '-'}\n                  </StyledTd>\n                  <StyledTdComment>{transaction.comment}</StyledTdComment>\n                  <StyledTd\n                    $color={\n                      transaction.type === 'INCOME' ? '#FFB627' : '#FF868D'\n                    }\n                  >\n                    {transaction.amount}\n                  </StyledTd>\n                  <td>\n                    <StyledTableBtnWrapper>\n                      <StyledEditBtn>\n                        <svg width=\"14\" height=\"14\">\n                          <use href={`${sprite}#edit`} />\n                        </svg>\n                      </StyledEditBtn>\n                      <StyledDeleteBtn\n                        onClick={() => handleTableBtnDelete(transaction.id)}\n                      >\n                        Delete\n                      </StyledDeleteBtn>\n                    </StyledTableBtnWrapper>\n                  </td>\n                </StyledTr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan=\"6\">No transactions found.</td>\n              </tr>\n            )}\n          </StyledTbodyTable>\n        </StyledTable>\n      </StyledTableWrapper>\n    </StyledTransactionsList>\n  );\n};\nfunction formatDate(dateString) {\n  const date = new Date(dateString);\n  const day = date.getDate().toString().padStart(2, '0');\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n  const year = date.getFullYear().toString().slice(-2);\n  return `${day}.${month}.${year}`;\n}\n\nexport default TransactionsList;\n","import AddTransactionForm from 'components/AddTransactionForm/AddTransactionForm';\nimport ButtonAddTransactions from 'components/ButtonAddTransactions/ButtonAddTransactions';\nimport EditTransactionForm from 'components/EditTransactionForm/EditTransactionForm';\nimport ModalAddTransaction from 'components/ModalAddTransaction/ModalAddTransaction';\nimport ModalEditTransaction from 'components/ModalEditTransaction/ModalEditTransaction';\nimport MobileList from 'components/TransactionsList/MobileList';\nimport TransactionsList from 'components/TransactionsList/TransactionsList';\nimport React from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport { StyledContainer } from 'styles/GlobalStyles';\n\nconst HomeTab = () => {\n  const isTable = useMediaQuery({\n    query: '(min-width:768px)',\n  });\n  return (\n    <StyledContainer>\n      {isTable ? <TransactionsList /> : <MobileList />}\n      <ButtonAddTransactions />\n      <ModalAddTransaction />\n      <ModalEditTransaction />\n      <AddTransactionForm />\n      <EditTransactionForm />\n    </StyledContainer>\n  );\n};\n\nexport default HomeTab;\n","// transactions\n\nexport const selectTransactions = state =>\n  state.transactions.transactions.items;\nexport const selectLoading = state => state.transactions.transactions.isLoading;\nexport const selectError = state => state.transactions.transactions.error;\nexport const selectCategories = state =>\n  state.transactions.transactions.categories;\n\n// summary\n\nexport const selectCategoriesSummary = state =>\n  state.transactions.summary.categoriesSummary;\nexport const selectIncomeSummary = state =>\n  state.transactions.summary.incomeSummary;\nexport const selectExpenseSummary = state =>\n  state.transactions.summary.expenseSummary;\nexport const selectPeriodTotal = state =>\n  state.transactions.summary.periodTotal;\nexport const selectYear = state => state.transactions.summary.year;\nexport const selectMonth = state => state.transactions.summary.month;\n"],"names":["StyledContainer","styled","div","_templateObject","_taggedTemplateLiteral","StyledForm","Form","_templateObject2","StyledField","Field","_templateObject3","StyledSelect","select","_templateObject4","AddFormTitle","h2","_templateObject5","StyledDatePicker","DatePicker","_templateObject6","_ref","theme","colors","mainWhite","BtnBox","_templateObject7","BtnAdd","button","_templateObject8","_ref2","_ref3","backgrounds","btnGradient","BtnCancel","_templateObject9","_ref4","categories","AddSchema","object","amount","string","required","min","max","comment","category","oneOf","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","startDate","setStartDate","_jsx","children","_jsxs","Formik","initialValues","type","date","Date","toLocaleDateString","validationSchema","onSubmit","values","console","log","addTransactionThunk","errors","touched","handleChange","autoComplete","name","value","onChange","disabled","map","placeholder","target","dateFormat","showIcon","selected","maxDate","style","float","icon","width","height","href","concat","sprite","StyledTransactionsList","StyledMobileWrapper","ul","StyledTableWrapper","StyledTable","table","StyledHeaderTr","tr","tableHead","shadows","default","blur","backdropFilter","StyledTh","th","StyledTbodyTable","tbody","StyledTr","_ref5","border","borderBottom","StyledTd","td","props","$color","StyledTdComment","_templateObject10","StyledTableBtnWrapper","_templateObject11","StyledTransaction","li","StyledParWrapper","StyledParagraph","p","StyledSpan","span","StyledBtnBox","StyledDeleteBtn","deleteBtnShadow","StyledEditBtn","formatDate","dateString","day","getDate","toString","padStart","month","getMonth","year","getFullYear","slice","transaction","useSelector","selectCategories","find","cat","id","categoryId","_Fragment","transactionDate","length","onClick","deleteTransactionThunk","transactions","selectTransactions","loading","selectLoading","error","selectError","Loader","TransactionsItem","_categories$find","colSpan","isTable","useMediaQuery","query","TransactionsList","MobileList","ButtonAddTransactions","ModalAddTransaction","ModalEditTransaction","AddTransactionForm","EditTransactionForm","state","items","isLoading","selectCategoriesSummary","summary","categoriesSummary","selectIncomeSummary","incomeSummary","selectExpenseSummary","expenseSummary","selectPeriodTotal","periodTotal"],"sourceRoot":""}